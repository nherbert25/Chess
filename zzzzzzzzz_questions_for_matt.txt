

1. 
I want to keep 'tiles' and 'pieces' as seperate classes since they feel distinct.

However, how do I keep the piece 'position' tied to the square that it's on instead of having it stay a seperate variable? 
When I move the piece, currently I need to update the piece positon, but I want all of it's methods to instead pull from the tile it's on.

I could create a new piece using variables from the old piece and the new square, but that feels clumsy. 



2.
Where do I put functions that require input from all squares?
I want to keep the logic for a type of piece within the class of the piece. But again, that method
requires input from the entire board state, not just variables from that piece.


3.
How do I create a null Piece in my main function without importing it???
from pieces.nullPiece import NullPiece

4. 
How do I instanciate a class with a default function that comes from the class itself which requires an input variable?
see rook
		#self.sprite = "../ChessArt/"+alliance[0].upper()+toString().upper()+".png"  <-- I want the default value of sprite to depend on the function toString, defined in the class


5. 
I want position to be a variable in the "piece" class, because I want the movement calculation for the piece (which depends on the position) to be in the piece class.
HOWEVER, I want the position variable to be pulled from the tile it's on, not just when initialized, but always.

6.
why is an empty list [] a nonetype?
if var in []:
	#do thing
error - nonetypes are not iterable